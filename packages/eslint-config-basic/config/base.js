module.exports = {
  plugins: [
    // https://eslint.style/packages/js
    '@stylistic/js',
    // https://github.com/eslint/eslint-plugin-markdown
    'markdown',
    // https://github.com/BenoitZugmeyer/eslint-plugin-html
    'html',
    // https://github.com/antfu/eslint-config/tree/main/packages/eslint-plugin-antfu
    'antfu',
  ],
  settings: {
    html: {
      'report-bad-indent': 'warn',
    },
  },
  extends: [
    'plugin:markdown/recommended',
  ],
  rules: {
    // https://eslint.org/docs/latest/rules/#possible-problems
    // ----------------------------------------
    'array-callback-return': 'error',
    'constructor-super': 'error',
    'for-direction': 'error',
    'getter-return': 'error',
    'no-async-promise-executor': 'error',
    // 'no-await-in-loop': 'error',
    'no-class-assign': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': ['error', 'always'],
    'no-const-assign': 'error',
    // 'no-constant-binary-expression': 'error',
    'no-constant-condition': ['error', { checkLoops: false }],
    // 'no-constructor-return': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    // 'no-duplicate-imports': 'error',
    'no-empty-character-class': 'error',
    'no-empty-pattern': 'error',
    'no-ex-assign': 'error',
    'no-fallthrough': 'error',
    'no-func-assign': 'error',
    'no-import-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-loss-of-precision': 'error',
    'no-misleading-character-class': 'error',
    // 'no-new-native-nonconstructor': 'error',
    'no-new-symbol': 'error',
    'no-obj-calls': 'error',
    // 'no-promise-executor-return': 'error',
    'no-prototype-builtins': 'error',
    'no-self-assign': ['error', { props: true }],
    'no-self-compare': 'error',
    'no-setter-return': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-this-before-super': 'error',
    'no-undef': 'error',
    'no-unexpected-multiline': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unsafe-optional-chaining': 'error',
    // 'no-unused-private-class-members': 'error',
    // 'no-unused-vars': 'error',
    'no-use-before-define': [
      'error', {
        functions: false,
        classes: false,
        variables: true,
      },
    ],
    'no-useless-backreference': 'error',
    // 'require-atomic-updates': 'error',
    'use-isnan': [
      'error',
      {
        enforceForSwitchCase: true,
        enforceForIndexOf: true,
      },
    ],
    'valid-typeof': ['error', { requireStringLiterals: true }],

    // https://eslint.org/docs/latest/rules/#suggestions
    // ----------------------------------------
    'accessor-pairs': [
      'error',
      {
        setWithoutGet: true,
        getWithoutSet: false,
        enforceForClassMembers: true,
      },
    ],
    'arrow-body-style': ['warn', 'as-needed'],
    'block-scoped-var': 'error',
    // 'camelcase': 'error',
    // 'capitalized-comments': 'error',
    // 'class-methods-use-this': 'error',
    // 'complexity': 'error',
    // 'consistent-return': 'error',
    // 'consistent-this': 'error',
    'curly': ['warn', 'multi-or-nest', 'consistent'],
    // 'default-case': 'error',
    'default-case-last': 'error',
    // 'default-param-last': 'error',
    'dot-notation': ['warn', { allowKeywords: true }],
    'eqeqeq': ['warn', 'smart'],
    // 'func-name-matching': 'error',
    // 'func-names': 'error',
    // 'func-style': 'error',
    // 'grouped-accessor-pairs': 'error',
    // 'guard-for-in': 'error',
    // 'id-denylist': 'error',
    // 'id-length': 'error',
    // 'id-match': 'error',
    // 'init-declarations': 'error',
    'logical-assignment-operators': ['warn', 'always'],
    // 'max-classes-per-file': 'error',
    // 'max-depth': 'error',
    // 'max-lines': 'error',
    // 'max-lines-per-function': 'error',
    // 'max-nested-callbacks': 'error',
    // 'max-params': 'error',
    // 'max-statements': 'error',
    // 'multiline-comment-style': ['warn', 'separate-lines'],
    'new-cap': ['error', { newIsCap: true, capIsNew: false, properties: true }],
    'no-alert': 'error',
    'no-array-constructor': 'error',
    // 'no-bitwise': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    '@stylistic/js/no-confusing-arrow': 'warn',
    'no-console': ['error', { allow: ['warn', 'error'] }],
    // 'no-continue': 'error',
    'no-delete-var': 'error',
    // 'no-div-regex': 'error',
    'no-else-return': 'warn',
    'no-empty': ['error', { allowEmptyCatch: true }],
    // 'no-empty-function': 'error',
    // 'no-empty-static-block': 'error',
    // 'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'warn',
    'no-extra-boolean-cast': 'warn',
    'no-extra-label': 'warn',
    '@stylistic/js/no-extra-semi': 'warn',
    '@stylistic/js/no-floating-decimal': 'warn',
    'no-global-assign': 'error',
    'no-implicit-coercion': ['error', { allow: ['!!'] }],
    // 'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    // 'no-inline-comments': 'error',
    // 'no-invalid-this': 'error',
    'no-iterator': 'error',
    // 'no-label-var': 'error',
    'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
    'no-lone-blocks': 'error',
    'no-lonely-if': 'warn',
    // 'no-loop-func': 'error',
    // 'no-magic-numbers': 'error',
    '@stylistic/js/no-mixed-operators': [
      'error',
      {
        groups: [
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||', '?:'],
          ['in', 'instanceof'],
        ],
        allowSamePrecedence: true,
      },
    ],
    // 'no-multi-assign': 'error',
    'no-multi-str': 'error',
    // 'no-negated-condition': 'error',
    // 'no-nested-ternary': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-nonoctal-decimal-escape': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    // 'no-param-reassign': 'error',
    // 'no-plusplus': 'error',
    'no-proto': 'error',
    'no-redeclare': 'error',
    'no-regex-spaces': 'warn',
    // 'no-restricted-exports': 'error',
    'no-restricted-globals': [
      'error',
      { name: 'global', message: 'Use `globalThis` instead.' },
      { name: 'self', message: 'Use `globalThis` instead.' },
    ],
    // 'no-restricted-imports': 'error',
    'no-restricted-properties': [
      'error',
      { property: '__proto__', message: 'Use `Object.getPrototypeOf` or `Object.setPrototypeOf` instead.' },
      { property: '__defineGetter__', message: 'Use `Object.defineProperty` instead.' },
      { property: '__defineSetter__', message: 'Use `Object.defineProperty` instead.' },
      { property: '__lookupGetter__', message: 'Use `Object.getOwnPropertyDescriptor` instead.' },
      { property: '__lookupSetter__', message: 'Use `Object.getOwnPropertyDescriptor` instead.' },
    ],
    'no-restricted-syntax': ['error', 'DebuggerStatement', 'LabeledStatement', 'WithStatement'],
    'no-return-assign': 'error',
    'no-return-await': 'error',
    // 'no-script-url': 'error',
    'no-sequences': 'error',
    // 'no-shadow': 'error',
    'no-shadow-restricted-names': 'error',
    // 'no-ternary': 'error',
    'no-throw-literal': 'error',
    'no-undef-init': 'warn',
    // 'no-undefined': 'error',
    // 'no-underscore-dangle': 'error',
    'no-unneeded-ternary': ['warn', { defaultAssignment: false }],
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
      },
    ],
    'no-unused-labels': 'warn',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-useless-computed-key': 'warn',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-escape': 'error',
    'no-useless-rename': 'warn',
    'no-useless-return': 'warn',
    'no-var': 'warn',
    'no-void': 'error',
    // 'no-warning-comments': 'error',
    'no-with': 'error',
    'object-shorthand': [
      'warn', 'always',
      {
        ignoreConstructors: false,
        avoidQuotes: true,
      },
    ],
    'one-var': ['warn', { initialized: 'never' }],
    // '@stylistic/js/one-var-declaration-per-line': 'warn',
    'operator-assignment': ['warn', 'always'],
    'prefer-arrow-callback': [
      'warn',
      {
        allowNamedFunctions: false,
        allowUnboundThis: true,
      },
    ],
    'prefer-const': [
      'warn',
      {
        destructuring: 'all',
        ignoreReadBeforeAssign: true,
      },
    ],
    // 'prefer-destructuring': 'warn',
    'prefer-exponentiation-operator': 'warn',
    // 'prefer-named-capture-group': 'error',
    'prefer-numeric-literals': 'warn',
    'prefer-object-has-own': 'warn',
    'prefer-object-spread': 'warn',
    'prefer-promise-reject-errors': 'error',
    'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'warn',
    '@stylistic/js/quote-props': ['warn', 'consistent-as-needed'],
    // 'radix': 'error',
    'require-await': 'error',
    // 'require-unicode-regexp': 'error',
    'require-yield': 'error',
    // 'sort-imports': 'warn',
    // 'sort-keys': 'error',
    'sort-vars': 'warn',
    '@stylistic/js/spaced-comment': [
      'warn', 'always',
      {
        line: {
          markers: ['/'],
          exceptions: ['/', '#'],
        },
        block: {
          markers: ['!'],
          exceptions: ['*'],
          balanced: true,
        },
      },
    ],
    'strict': 'warn',
    'symbol-description': 'error',
    'vars-on-top': 'error',
    'yoda': ['warn', 'never'],

    // https://eslint.org/docs/latest/rules/#layout--formatting
    // ----------------------------------------
    '@stylistic/js/array-bracket-newline': ['warn', 'consistent'],
    '@stylistic/js/array-bracket-spacing': ['warn', 'never'],
    // '@stylistic/js/array-element-newline': 'warn',
    '@stylistic/js/arrow-parens': ['warn', 'always'],
    '@stylistic/js/arrow-spacing': ['warn', { before: true, after: true }],
    '@stylistic/js/block-spacing': ['warn', 'always'],
    '@stylistic/js/brace-style': ['warn', 'stroustrup', { allowSingleLine: false }],
    '@stylistic/js/comma-dangle': ['warn', 'always-multiline'],
    '@stylistic/js/comma-spacing': ['warn', { before: false, after: true }],
    '@stylistic/js/comma-style': ['warn', 'last'],
    '@stylistic/js/computed-property-spacing': ['warn', 'never', { enforceForClassMembers: true }],
    '@stylistic/js/dot-location': ['warn', 'property'],
    '@stylistic/js/eol-last': ['warn', 'always'],
    '@stylistic/js/func-call-spacing': ['warn', 'never'],
    // '@stylistic/js/function-call-argument-newline': 'warn',
    '@stylistic/js/function-paren-newline': ['warn', 'consistent'],
    '@stylistic/js/generator-star-spacing': ['warn', { before: false, after: true }],
    // '@stylistic/js/implicit-arrow-linebreak': 'warn',
    '@stylistic/js/indent': [
      'warn', 2,
      {
        SwitchCase: 1,
        VariableDeclarator: 1,
        outerIIFEBody: 1,
      },
    ],
    // '@stylistic/js/jsx-quotes': 'warn',
    '@stylistic/js/key-spacing': ['warn', { beforeColon: false, afterColon: true }],
    '@stylistic/js/keyword-spacing': ['warn', { before: true, after: true }],
    // 'line-comment-position': 'error',
    // '@stylistic/js/linebreak-style': 'warn',
    // '@stylistic/js/lines-around-comment': 'warn',
    '@stylistic/js/lines-between-class-members': ['warn', 'always', { exceptAfterSingleLine: true }],
    // '@stylistic/js/max-len': 'error',
    '@stylistic/js/max-statements-per-line': ['error', { max: 1 }],
    '@stylistic/js/multiline-ternary': ['warn', 'always-multiline'],
    '@stylistic/js/new-parens': 'warn',
    // '@stylistic/js/newline-per-chained-call': 'warn',
    '@stylistic/js/no-extra-parens': ['warn', 'functions'],
    '@stylistic/js/no-mixed-spaces-and-tabs': 'error',
    '@stylistic/js/no-multi-spaces': 'warn',
    '@stylistic/js/no-multiple-empty-lines': ['warn', { max: 1, maxBOF: 0, maxEOF: 0 }],
    '@stylistic/js/no-tabs': 'error',
    '@stylistic/js/no-trailing-spaces': [
      'warn',
      {
        skipBlankLines: false,
        ignoreComments: false,
      },
    ],
    '@stylistic/js/no-whitespace-before-property': 'warn',
    // '@stylistic/js/nonblock-statement-body-position': 'warn',
    '@stylistic/js/object-curly-newline': ['warn', { multiline: true, consistent: true }],
    '@stylistic/js/object-curly-spacing': ['warn', 'always'],
    '@stylistic/js/object-property-newline': ['warn', { allowMultiplePropertiesPerLine: true }],
    '@stylistic/js/operator-linebreak': ['warn', 'before'],
    '@stylistic/js/padded-blocks': [
      'warn',
      {
        blocks: 'never',
        switches: 'never',
        classes: 'never',
      },
    ],
    '@stylistic/js/padding-line-between-statements': [
      'warn',
      { blankLine: 'always', prev: 'block-like', next: '*' },
      { blankLine: 'always', prev: '*', next: 'block-like' },
      { blankLine: 'always', prev: 'if', next: '*' },
      { blankLine: 'always', prev: '*', next: 'if' },
    ],
    '@stylistic/js/quotes': ['warn', 'single'],
    '@stylistic/js/rest-spread-spacing': ['warn', 'never'],
    '@stylistic/js/semi': ['warn', 'never'],
    '@stylistic/js/semi-spacing': ['warn', { before: false, after: true }],
    // '@stylistic/js/semi-style': 'warn',
    '@stylistic/js/space-before-blocks': ['warn', 'always'],
    '@stylistic/js/space-before-function-paren': [
      'warn',
      {
        anonymous: 'always',
        named: 'never',
        asyncArrow: 'always',
      },
    ],
    '@stylistic/js/space-in-parens': ['warn', 'never'],
    '@stylistic/js/space-infix-ops': 'warn',
    '@stylistic/js/space-unary-ops': ['warn', { words: true, nonwords: false }],
    // '@stylistic/js/switch-colon-spacing': 'warn',
    '@stylistic/js/template-curly-spacing': ['warn', 'never'],
    '@stylistic/js/template-tag-spacing': ['warn', 'never'],
    'unicode-bom': ['warn', 'never'],
    '@stylistic/js/wrap-iife': ['warn', 'any', { functionPrototypeMethods: true }],
    // '@stylistic/js/wrap-regex': 'warn',
    '@stylistic/js/yield-star-spacing': ['warn', 'both'],

    // https://eslint.org/docs/latest/rules/#deprecated
    // ----------------------------------------

    // https://eslint.org/docs/latest/rules/#removed
    // ----------------------------------------

    // EditorConfig
    // ----------------------------------------
    // indent, eol-last, linebreak-style, no-trailing-spaces

    // antfu
    // https://github.com/antfu/eslint-config/tree/main/packages/eslint-plugin-antfu/src/rules
    // ----------------------------------------
    // 'antfu/generic-spacing': 'warn',
    'antfu/if-newline': 'warn',
    'antfu/import-dedupe': 'warn',
    // 'antfu/named-tuple-spacing': 'warn',
    // 'antfu/no-cjs-exports': 'error',
    // 'antfu/no-const-enum': 'error',
    'antfu/no-import-node-modules-by-path': 'error',
    // 'antfu/no-ts-export-equal': 'error',
    // 'antfu/prefer-inline-type-import': 'warn',
    'antfu/top-level-function': 'warn',
  },
}
